Architecture Design:

The PSO library is designed using modular, object-oriented principles. The two main components are the **AckleyFunction** class and the **ParticleSwarmOptimizer** class.

1. **AckleyFunction Class**:
   - This class represents the Ackley function, a widely used benchmark in optimization. It supports multiple dimensions and customizable bounds for the solution space.
   - The key method is `evaluate()`, which computes the fitness value for a given solution. This function serves as the optimization target for the PSO algorithm.

2. **ParticleSwarmOptimizer Class**:
   - This class implements the PSO algorithm, handling the initialization of particle positions and velocities. It updates the particles based on cognitive, social, and inertia factors.
   - The main attributes include `swarm_size`, `positions`, `velocities`, `personal_best`, and `global_best`, which manage the particles' current and best-known positions.
   - The `optimize()` method runs the algorithm for a specified number of iterations, updating particle velocities and positions while tracking the best solution found.

The architecture allows for flexible experimentation by separating the optimization problem (AckleyFunction) from the optimization algorithm (PSO). The system can easily adapt to different problem instances or be extended with new optimization techniques.
