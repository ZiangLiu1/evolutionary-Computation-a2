Architecture Design
The PSO library is designed using object-oriented principles with three main classes: RealValuedProblem, AckleyFunction, and ParticleSwarmOptimizer.

RealValuedProblem Class:

This abstract base class defines a general structure for real-valued optimization problems. It includes attributes for the number of dimensions and solution space bounds.
The evaluate() method is abstract and must be implemented by subclasses, allowing flexibility for different optimization problems.
AckleyFunction Class:

This class inherits from RealValuedProblem and implements the Ackley function, a common benchmark in optimization. It has default bounds of (-30, 30) and supports multiple dimensions.
The evaluate() method computes the fitness value for a given solution using the Ackley function formula, which serves as the objective for the PSO algorithm.
ParticleSwarmOptimizer Class:

This class implements the PSO algorithm to optimize any subclass of RealValuedProblem. It manages a swarm of particles with attributes like positions, velocities, and best-known solutions.
The optimizer updates particles based on cognitive, social, and inertia factors through the update_velocity() method. The optimize() method iterates over the swarm to find the best solution.
The architecture separates the optimization problem (e.g., AckleyFunction) from the PSO algorithm, promoting flexibility and reuse. Other real-valued problems can easily be integrated by subclassing RealValuedProblem. This design ensures modularity, making it adaptable to future extensions.